---
import { getCollection } from 'astro:content';
import Layout from '~/layouts/PageLayout.astro';

export async function getStaticPaths() {
  const freebies = await getCollection('freebie');
  return freebies.map((freebie) => ({
    params: { slug: freebie.id.replace(/\.md$/, '') },
    props: { pdfUrl: freebie.data.pdfUrl },
  }));
}

const { pdfUrl } = Astro.props;

// Convert Google Drive view URL to direct download URL
const getDirectDownloadUrl = (url: string) => {
  if (url.includes('drive.google.com')) {
    // Handle different Google Drive URL formats
    if (url.includes('/view')) {
      // Convert /view URLs
      return url.replace('/view', '/uc?export=download&');
    } else if (url.includes('/file/d/')) {
      // Handle /file/d/ URLs
      const fileId = url.match(/\/file\/d\/([^/]+)/)?.[1];
      if (fileId) {
        return `https://drive.google.com/uc?export=download&id=${fileId}`;
      }
    }
  }
  return url;
};

const downloadUrl = getDirectDownloadUrl(pdfUrl);
---
<Layout metadata={{ title: 'Downloading...', description: 'Your download is starting' }}>
  <div class="flex items-center justify-center min-h-screen">
    <div class="text-center">
      <h1 class="text-2xl mb-4">Your download is starting...</h1>
      <p class="mb-4">If your download doesn't start automatically, <a href={downloadUrl} class="text-primary hover:underline">click here</a></p>
    </div>
  </div>
</Layout>

<script define:vars={{ downloadUrl }}>
  // Redirect to the download URL after a short delay
  setTimeout(() => {
    window.location.href = downloadUrl;
  }, 1500);
</script> 