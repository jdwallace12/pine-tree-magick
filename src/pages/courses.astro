---
import Layout from '~/layouts/PageLayout.astro';
import { getCollection } from 'astro:content';

const metadata = {
  title: 'Courses - Pine Tree Magick',
  description: 'Explore our mystical courses and begin your journey into astrology and magick.',
  canonical: '/courses'
};

const courses = await getCollection('course', ({ data }) => !data.draft);
---

<Layout metadata={metadata}>
  <div class="min-h-screen bg-dark relative overflow-hidden">
    <!-- Background with night sky -->
    <div class="absolute inset-0">
      <div class="absolute inset-0 bg-gradient-to-b from-primary to-dark opacity-90"></div>
      <div class="absolute inset-0 opacity-55" style="background-image: url('/assets/images/night-sky.webp'); background-size: cover; background-position: center;"></div>
    </div>

    <div class="relative z-10 container mx-auto px-4 py-8">
      <!-- Header -->
      <div class="text-center mb-12">
        <h1 class="text-5xl font-normal tracking-tight text-gray-200 mb-4 font-heading">
          ‚ú® Mystical Courses ‚ú®
        </h1>
        <p class="text-xl text-muted max-w-3xl mx-auto">
          Embark on a transformative journey through our carefully crafted courses designed to awaken your inner mystic and deepen your understanding of the cosmos.
        </p>
      </div>

      <!-- Course Grid -->
      <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
        {courses.map((course) => (
          <div class="bg-page/20 backdrop-blur-lg rounded-2xl p-6 border border-gray-500/20 hover:border-primary/50 transition-all duration-300 transform hover:scale-105">
            <!-- Course Image -->
            <div class="aspect-video bg-gradient-to-br from-secondary/20 to-primary/20 rounded-xl mb-6 flex items-center justify-center overflow-hidden">
              {course.data.image ? (
                <img 
                  src={course.data.image} 
                  alt={course.data.title}
                  class="w-full h-full object-cover"
                />
              ) : (
                <span class="text-6xl">üìö</span>
              )}
            </div>

            <!-- Course Info -->
            <div class="space-y-4">
              <div>
                <h3 class="text-xl font-medium text-gray-200 mb-2 font-heading">
                  {course.data.title}
                </h3>
                <p class="text-muted line-clamp-3">
                  {course.data.excerpt}
                </p>
              </div>

              <!-- Course Meta -->
              <div class="flex items-center justify-between text-sm text-muted">
                <span>‚è±Ô∏è {course.data.duration}</span>
                <span>üìä {course.data.level}</span>
              </div>

              <!-- Course Stats -->
              <div class="flex items-center justify-between text-sm">
                <span class="text-muted">üìö {course.data.lessons.length} lessons</span>
                <span class="text-primary font-semibold">${course.data.price}</span>
              </div>

              <!-- Course Tags -->
              {course.data.tags && course.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2">
                  {course.data.tags.slice(0, 3).map((tag, index) => (
                    <span key={index} class="px-2 py-1 bg-primary/20 text-primary text-xs rounded-full">
                      {tag}
                    </span>
                  ))}
                </div>
              )}

              <!-- Course Description -->
              <p class="text-sm text-muted line-clamp-2">
                {course.data.description}
              </p>

              <!-- CTA Buttons -->
              <div class="flex gap-3 pt-4">
                <a 
                  href={`/course/${course.slug}`}
                  class="btn-primary flex-1 font-semibold py-3 px-4 rounded-lg transition-all duration-300 transform hover:scale-105 text-center"
                >
                  Learn More
                </a>
                <button 
                  class="btn-secondary font-semibold py-3 px-4 rounded-lg transition-all duration-300 transform hover:scale-105"
                  onclick="showPurchaseModal('${course.slug}', '${course.data.title}', ${course.data.price})"
                >
                  Enroll Now
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>

      <!-- Call to Action -->
      <div class="text-center mt-16">
        <div class="bg-page/20 backdrop-blur-lg rounded-2xl p-8 border border-gray-500/20">
          <h2 class="text-3xl font-normal tracking-tight text-gray-200 mb-4 font-heading">
            Ready to Begin Your Journey?
          </h2>
          <p class="text-muted mb-6 max-w-2xl mx-auto">
            Join our community of mystics and spiritual seekers. Each course is designed to provide you with practical knowledge and spiritual growth.
          </p>
          <div class="flex gap-4 justify-center">
            <a href="/login" class="btn-primary font-semibold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105">
              Sign In to Continue
            </a>
            <a href="/login" class="btn-secondary font-semibold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105">
              Create Account
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Purchase Modal -->
  <div id="purchase-modal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden">
    <div class="min-h-screen flex items-center justify-center p-4">
      <div class="bg-page/95 backdrop-blur-lg rounded-2xl p-8 max-w-md w-full border border-gray-500/20">
        <div class="text-center">
          <h3 id="modal-course-title" class="text-2xl font-normal tracking-tight text-gray-200 mb-4 font-heading">
            Course Title
          </h3>
          <p class="text-muted mb-6">
            Ready to enroll in this mystical journey?
          </p>
          
          <div class="bg-primary/20 rounded-lg p-4 mb-6">
            <p class="text-primary font-semibold text-lg">
              Investment: $<span id="modal-course-price">0</span>
            </p>
          </div>

          <!-- Authentication Check -->
          <div id="auth-required" class="space-y-3">
            <p class="text-muted text-sm mb-4">
              Please sign in or create an account to purchase this course.
            </p>
            <a 
              href="/login"
              class="btn-primary w-full font-semibold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105"
            >
              Sign In to Purchase
            </a>
            <a 
              href="/login"
              class="btn-secondary w-full font-semibold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105"
            >
              Create Account
            </a>
          </div>

          <!-- PayPal Checkout (shown when authenticated) -->
          <div id="paypal-checkout" class="space-y-3 hidden">
            <p class="text-muted text-sm mb-4">
              Complete your purchase securely with PayPal.
            </p>
            <div id="paypal-button-container" class="mb-4"></div>
            <div id="purchase-status" class="text-sm"></div>
          </div>

          <button 
            onclick="hidePurchaseModal()"
            class="text-muted hover:text-gray-200 transition-colors mt-4 text-sm"
          >
            Maybe later
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- PayPal Script -->
  <script src="https://www.paypal.com/sdk/js?client-id=YOUR_PAYPAL_CLIENT_ID&currency=USD"></script>

  <script>
    let currentUser = null;
    let currentCourse = null;

    // Check authentication status
    async function checkAuth() {
      try {
        const { data: { session } } = await supabase.auth.getSession();
        return session?.user || null;
      } catch (error) {
        console.error('Auth check error:', error);
        return null;
      }
    }

    function showPurchaseModal(courseSlug, courseTitle, coursePrice) {
      currentCourse = { slug: courseSlug, title: courseTitle, price: coursePrice };
      
      document.getElementById('modal-course-title').textContent = courseTitle;
      document.getElementById('modal-course-price').textContent = coursePrice;
      document.getElementById('purchase-modal').classList.remove('hidden');
      
      // Check auth and show appropriate content
      checkAuthAndShowCheckout();
    }

    function hidePurchaseModal() {
      document.getElementById('purchase-modal').classList.add('hidden');
      currentCourse = null;
      currentUser = null;
    }

    async function checkAuthAndShowCheckout() {
      const user = await checkAuth();
      
      if (user) {
        currentUser = user;
        document.getElementById('auth-required').classList.add('hidden');
        document.getElementById('paypal-checkout').classList.remove('hidden');
        setupPayPalButtons();
      } else {
        document.getElementById('auth-required').classList.remove('hidden');
        document.getElementById('paypal-checkout').classList.add('hidden');
      }
    }

    function setupPayPalButtons() {
      if (!currentCourse || !currentUser) return;

      paypal.Buttons({
        createOrder: function(data, actions) {
          return createPayPalOrder();
        },
        onApprove: function(data, actions) {
          return handlePayPalApproval(data);
        },
        onError: function(err) {
          console.error('PayPal error:', err);
          const statusElement = document.getElementById('purchase-status');
          if (statusElement) {
            statusElement.innerHTML = '<p class="text-red-400">Payment failed. Please try again.</p>';
          }
        }
      }).render('#paypal-button-container');
    }

    async function createPayPalOrder() {
      try {
        const response = await fetch('/api/create-paypal-order', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            courseId: currentCourse.slug,
            courseTitle: currentCourse.title,
            price: currentCourse.price,
            userId: currentUser.id,
            userEmail: currentUser.email
          })
        });

        const result = await response.json();
        
        if (result.error) {
          throw new Error(result.error);
        }

        return result.orderId;
      } catch (error) {
        console.error('Create order error:', error);
        throw error;
      }
    }

    async function handlePayPalApproval(data) {
      try {
        document.getElementById('purchase-status').innerHTML = 
          '<p class="text-yellow-400">Processing your payment...</p>';

        // In a real implementation, you would capture the payment here
        // For now, we'll simulate success
        setTimeout(() => {
          document.getElementById('purchase-status').innerHTML = 
            '<p class="text-green-400">Payment successful! Redirecting to dashboard...</p>';
          
          setTimeout(() => {
            window.location.href = '/dashboard';
          }, 2000);
        }, 2000);

      } catch (error) {
        console.error('Payment approval error:', error);
        document.getElementById('purchase-status').innerHTML = 
          '<p class="text-red-400">Payment processing failed. Please contact support.</p>';
      }
    }

    // Close modal when clicking outside
    document.getElementById('purchase-modal')?.addEventListener('click', function(e) {
      if (e.target === this) {
        hidePurchaseModal();
      }
    });

    // Check auth on page load
    document.addEventListener('DOMContentLoaded', async function() {
      await checkAuth();
    });
  </script>
</Layout> 